javax.validation.constraints.AssertFalse.message    = muss falsch sein
javax.validation.constraints.AssertTrue.message     = muss wahr sein
javax.validation.constraints.DecimalMax.message     = muss kleiner oder gleich {value} sein
javax.validation.constraints.DecimalMin.message     = muss gr\u00F6\u00DFer oder gleich {value} sein
javax.validation.constraints.Digits.message         = numerischer Wert au\u00DFerhalb erlaubten Wertebereichs (<{integer} Ziffern>,<{fraction} Ziffern> erwartet)
javax.validation.constraints.Email.message          = keine g\u00FCltige E-Mail-Adresse
javax.validation.constraints.Future.message         = muss in der Zukunft liegen
javax.validation.constraints.FutureOrPresent.message = muss in der Gegenwart oder Zukunft liegen
javax.validation.constraints.Max.message            = muss kleiner oder gleich {value} sein
javax.validation.constraints.Min.message            = muss gr\u00F6\u00DFer oder gleich {value} sein
javax.validation.constraints.Negative.message       = muss kleiner 0 sein
javax.validation.constraints.NegativeOrZero.message = muss kleiner oder gleich 0 sein
javax.validation.constraints.NotBlank.message       = darf nicht leer sein
javax.validation.constraints.NotEmpty.message       = darf nicht leer sein
javax.validation.constraints.NotNull.message        = darf nicht null sein
javax.validation.constraints.Null.message           = muss null sein
javax.validation.constraints.Past.message           = muss in der Vergangenheit liegen
javax.validation.constraints.PastOrPresent.message  = muss in der Gegenwart oder Vergangenheit liegen
javax.validation.constraints.Pattern.message        = muss auf Ausdruck "{regexp}" passen
javax.validation.constraints.Positive.message       = muss gr\u00F6\u00DFer 0 sein
javax.validation.constraints.PositiveOrZero.message = muss gr\u00F6\u00DFer oder gleich 0 sein
javax.validation.constraints.Size.message           = muss zwischen {min} und {max} liegen

com.lmpessoa.services.core.hosting.ContentType.message           = unerwarteter Inhaltstyp
