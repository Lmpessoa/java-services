javax.validation.constraints.AssertFalse.message     = moet onwaar zijn
javax.validation.constraints.AssertTrue.message      = moet waar zijn
javax.validation.constraints.DecimalMax.message      = moet kleiner dan of gelijk aan {value} zijn
javax.validation.constraints.DecimalMin.message      = moet groter dan of gelijk aan {value} zijn
javax.validation.constraints.Digits.message          = numerieke waarde ligt buiten het toegestane bereik (<{integer} cijfers>,<{fraction} cijfers> verwacht)
javax.validation.constraints.Email.message           = het e-mailadres is ongeldig
javax.validation.constraints.Future.message          = moet in de toekomst zijn
javax.validation.constraints.FutureOrPresent.message = moet in het heden of in de toekomst zijn
javax.validation.constraints.Max.message             = moet kleiner of gelijk aan {value} zijn
javax.validation.constraints.Min.message             = moet groter of gelijk aan {value} zijn
javax.validation.constraints.Negative.message        = moet kleiner dan 0 zijn
javax.validation.constraints.NegativeOrZero.message  = moet kleiner dan of gelijk aan 0 zijn
javax.validation.constraints.NotBlank.message        = mag niet onbeschreven zijn
javax.validation.constraints.NotEmpty.message        = mag niet leeg zijn
javax.validation.constraints.NotNull.message         = mag niet null zijn
javax.validation.constraints.Null.message            = moet null zijn
javax.validation.constraints.Past.message            = moet in het verleden zijn
javax.validation.constraints.PastOrPresent.message   = moet in het heden of in het verleden zijn
javax.validation.constraints.Pattern.message         = moet overeenkomen met "{regexp}"
javax.validation.constraints.Positive.message        = moet groter dan 0 zijn
javax.validation.constraints.PositiveOrZero.message  = moet groter of gelijk zijn aan 0
javax.validation.constraints.Size.message            = moet tussen {min} en {max} liggen

com.lmpessoa.services.core.hosting.ContentType.message            = onverwacht inhoudstype
